---
layout: post
title: "NMAP"
date: 2014-03-02 15:44:36 +0800
comments: true
categories: 
---
<!--more-->
<p>This set of modules provides perl class wrappers for the network mapper (nmap) scanning tool (see <a href="http://www.insecure.org/nmap/" class="podlinkurl"
>http://www.insecure.org/nmap/</a>). Using these modules, a developer, network administrator, or other techie can create perl routines or classes which can be used to automate and integrate nmap scans elegantly into new and existing perl scripts.</p>

<p>If you don&#39;t have nmap installed, you will need to download it BEFORE you can use these modules. Get it from <a href="http://www.insecure.org/nmap/" class="podlinkurl"
>http://www.insecure.org/nmap/</a>. You will need nmap 3.10+ installed to use all the features of this module.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="USAGE"
>USAGE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The module set consists of a Scanner class and many classes that support the scanner and encapsulate the data output by nmap as it scans. The class that you will likely use most often is Nmap::Scanner. This class encapsulates the nmap scanner options and `drives&#39; the scan process. It provides a convenience constructor to let you create a scanner instance (Nmap::Scanner::Scanner instance).</p>

<p>Scans can be done in two modes using this module set: batch mode and event mode.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Batch_mode_scanning"
>Batch mode scanning</a></h2>

<p>In batch mode the scan is set up and executed and the results are returned in an Nmap::Scanner::Backend::Results object. This object contains information about the scan and a list of the found host objects (instances of Nmap::Scanner::Host). Each host contains a list of found ports on that host (instances of Nmap::Scanner::Port). No information is returned to the user until the entire scan is complete.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Event_mode_scanning"
>Event mode scanning</a></h2>

<p>In event mode the user registers interest in one or more scan events by passing a reference to a callback function to one or more event registration functions. The scanner then calls the callback function during a specifc phase of the scan. It passes the function arguments describing what has happened and the data found.</p>

<p>Each function is also passed a reference to the current object instance of Nmap::Scanner::Scanner (or a subclass of Nmap::Scanner::Scanner) as the FIRST argument so that subclasses with instance-specific data can be easily created (see the Nmap::Scanner::Util package and examples included with this module for examples).</p>

<p>There are five events that a user can register for: scan started event, host closed event, no ports open event, port found event, and scan complete event. The scan started event occurs at the beginning of the scan process for EACH host specified with add_target(). The host closed event is called if a specified host is found to be unavailable via whatever type of ping has been specified. The no ports open event is triggered if no ports are found to be open on a scanned host. The port found event is called when nmap identifies a port as open on a host (if the port is not explicitly passed to -P) or when the state of a port passed to -P is determined, whether the port is open or not. The scan complete event is called as soon as the scan of a host specified as a target with add_target() is complete.</p>
